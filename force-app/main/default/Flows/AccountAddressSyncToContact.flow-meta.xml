<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <assignments>
        <description>Add SingleContact in the UpdateContactList collection</description>
        <name>AddSingleContactToList</name>
        <label>AddSingleContactToList</label>
        <locationX>138</locationX>
        <locationY>815</locationY>
        <assignmentItems>
            <assignToReference>UpdateContactList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>SingleContact</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ContactIterationForAddress</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Use SingleContact variable to update the MailinAddress and Copy Id of the Current Item</description>
        <name>UpdateContactAddress</name>
        <label>UpdateContactAddress</label>
        <locationX>138</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>SingleContact.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ContactIterationForAddress.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SingleContact.MailingStreet</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.BillingStreet</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SingleContact.MailingCity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.BillingCity</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SingleContact.MailingState</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.BillingState</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SingleContact.MailingCountry</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.BillingCountry</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddSingleContactToList</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Check if the contact list is empty</description>
        <name>CheckContactEmptyList</name>
        <label>CheckContactEmptyList</label>
        <locationX>182</locationX>
        <locationY>455</locationY>
        <defaultConnectorLabel>IsEmpty</defaultConnectorLabel>
        <rules>
            <name>IsNotempty</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetContactsForAddressUpdate</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ContactIterationForAddress</targetReference>
            </connector>
            <label>IsNotempty</label>
        </rules>
    </decisions>
    <description>This flow will update all the child contacts on the update of billing address.</description>
    <interviewLabel>AccountAddressSyncToContact {!$Flow.CurrentDateTime}</interviewLabel>
    <label>AccountAddressSyncToContact</label>
    <loops>
        <description>Loop through all the contacts for update in their Mailing Address</description>
        <name>ContactIterationForAddress</name>
        <label>ContactIterationForAddress</label>
        <locationX>50</locationX>
        <locationY>575</locationY>
        <collectionReference>GetContactsForAddressUpdate</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>UpdateContactAddress</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>UpdateContactList1</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Fetch the contacts for the updated Account whose MaillingAddress do not match the BillingAddress</description>
        <name>GetContactsForAddressUpdate</name>
        <label>GetContactsForAddressUpdate</label>
        <locationX>182</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckContactEmptyList</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3 OR 4 OR 5 OR 6)</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>MailingCity</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.BillingCity</elementReference>
            </value>
        </filters>
        <filters>
            <field>MailingStreet</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.BillingStreet</elementReference>
            </value>
        </filters>
        <filters>
            <field>MailingPostalCode</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.BillingPostalCode</elementReference>
            </value>
        </filters>
        <filters>
            <field>MailingCountry</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.BillingCountry</elementReference>
            </value>
        </filters>
        <filters>
            <field>MailingState</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.ShippingState</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UpdateContactList1</name>
        <label>UpdateContactList</label>
        <locationX>50</locationX>
        <locationY>1031</locationY>
        <inputReference>UpdateContactList</inputReference>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetContactsForAddressUpdate</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>BillingCity</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>BillingCountry</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>BillingStreet</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>BillingPostalCode</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>BillingState</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Account</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <description>This will be used in iteration for holding the current contact&apos;s value</description>
        <name>SingleContact</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <description>This list will hold contacts for update</description>
        <name>UpdateContactList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Contact</objectType>
    </variables>
</Flow>
